{"uiComponent":[{
  "title": "Counter",
  "selector": ".badge",
  "rules": [
    {
      "description": "A Counter MUST only be used in combination with a glyph.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "parents",
                  "selector": "a"
                },
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "operator": "=",
              "amount": "1",
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "A Counter MUST contain exactly one number greater than zero and no other characters.",
      "level": "MUST",
      "type": "Composition",
      "tests": [
        {
          "description": "Only Numbers",
          "not": "",
          "variants": [
            {
              "type": "wording",
              "subtype": "amount",
              "selectorType": "selector",
              "selector": ".badge",
              "operator": "=",
              "amount": "1",
              "regex": {
                "term": "^(?!0)(\\d+)$",
                "modifier": "g"
              },
              "not": ""
            }
          ]
        }
      ]
    }
  ]
}

,{
  "title": "Novelty Counter",
  "selector": "a span span:first-child .badge, a > span.badge",
  "rules": [
    {
      "description": "The Novelty Counter MUST be displayed on the top right of the Glyph it accompanies.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"positioning",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "parents",
                  "selector": "a"
                },
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "positioning":[
                {
                  "type": "collide"
                },
                {
                  "type": "isAbove"
                },
                {
                  "type": "isLeft",
                  "not": "true"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The Novelty Counter SHOULD have an obtrusive background color such as red or orange.",
      "level": "MUST",
      "type": "Composition",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"coloring",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "coloring":[
                {
                  "whichA": "background-color",
                  "type": "isGrey",
                  "not": "true"
                },
                {
                  "whichA": "background-color",
                  "type": "isRedDominant",
                  "not": ""
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
}




,{
  "title": "Status Counter",
  "selector": "a > span > span:nth-child(2) .badge",
  "rules": [
    {
      "description": "The Status Counter MUST be displayed on the lower right of the item it accompanies.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"positioning",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "parents",
                  "selector": "a"
                },
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "positioning":[
                {
                  "type": "collide"
                },
                {
                  "type": "isAbove",
                  "not": "true"
                },
                {
                  "type": "isLeft",
                  "not": "true"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The Status Counter SHOULD have an non-obtrusive background color such as grey.",
      "level": "MUST",
      "type": "Style",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"coloring",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "coloring":[
                {
                  "whichA": "background-color",
                  "type": "isGrey"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Button",
  "selector": ".btn",
  "rules": [
    {
      "description": "Buttons MUST NOT be used inside a Textual Paragraph.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "insideText",
              "selectors": [{"type": "self"}],
              "not": "true"
            }
          ]
        }
      ]
    },
    {
      "description": "The caption of a Button SHOULD contain no more than two words.",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[{"type": "self"}],
              "contentType": "content",
              "operator":"<=",
              "amount":"2",
              "regex": "",
              "not":""
            }
          ]
        },
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[{"type": "self"}],
              "contentType": "attribute",
              "contentSelector": "value",
              "operator":"<=",
              "amount":"2",
              "regex": "",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": " Every word except articles, coordinating conjunctions and prepositions MUST be capitalized.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[{
                "type": "self"
              }],
              "contentType": "attribute",
              "contentSelector": "value",
              "operator":"=",
              "amount":"0",
              "regex": "( |\\(|^)[a-z][a-zA-Z0-9]*",
              "ignore":{
                "list": ["&nbsp;"],
                "ignoreConjunctions":true,
                "ignorePrepositions":true,
                "ignoreArticles":true

              },
              "not":""
            }
          ]
        },        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[{
                "type": "self"
              }],
              "contentType": "content",
              "operator":"=",
              "amount":"0",
              "regex": "( |\\(|^)[a-z][a-zA-Z0-9]*",
              "ignore":{
                "list": ["&nbsp;"],
                "ignoreConjunctions":true,
                "ignorePrepositions":true,
                "ignoreArticles":true
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": " If Text and Glyphs are used alongside as caption for a Button the Glyph MUST be displayed on the left side.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "amount":0,
              "operator":"=",
              "not": ""
            },
            {
              "type": "wording",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "amount":0,
              "operator":"=",
              "not": ""
            },
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors":[{
                "type": "children"
              }],
              "items":[
                {
                  "variant": {
                    "type": "structure",
                    "subtype": "amount",
                    "selectors": [
                      {
                        "type": "self",
                        "selector": ".glyphicon"
                      }
                    ],
                    "amount": 1,
                    "operator": "=",
                    "not": ""
                  }
                },
                {
                  "variant": {
                    "type": "true"
                  },
                  "optional": true,
                  "repetitions": -1
                }
              ],

              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If Text and a Caret are used alongside as caption for a Button the Caret MUST be displayed on the right side.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": ".caret"
                }
              ],
              "amount":0,
              "operator":"=",
              "not": ""
            },
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors":[{
                "type": "children"
              }],
              "items":[
                {
                  "variant": {
                    "type": "true"
                  },
                  "optional": true,
                  "repetitions": -1
                },
                {
                  "variant": {
                    "type": "structure",
                    "subtype": "amount",
                    "selectors": [
                      {
                        "type": "self",
                        "selector": ".caret"
                      }
                    ],
                    "amount": 1,
                    "operator": "=",
                    "not": ""
                  }
                }
              ],

              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "All glyph-only buttons MUST have aria-labels.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "amount":0,
              "operator":"=",
              "not": ""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[{"type": "self"}],
              "contentType": "content",
              "operator":">",
              "amount":"0",
              "regex": "",
              "not":""
            },
            {
              "type":"accessibility",
              "subtype":"ariaLabeled",
              "selectors": [
                {
                  "type": "children",
                  "selector": ".glyphicon"
                }
              ],
              "not":""
            },
            {
              "type":"accessibility",
              "subtype":"ariaLabeled",
              "selectors": [{"type": "self"}
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Button DOM elements MUST either be of type “button” or of type “a” accompanied with the aria-role “Button”",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"role",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "role": "button",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "self",
                  "selector": "button, input[type='button'], input[type='submit']"
                }
              ],
              "operator":"=",
              "amount":"1"
            }
          ]
        }
      ]
    }
  ]
}



,{
  "title": "Close Button",
  "selector": ".close",
  "rules": [
    {
      "description": "The Close Button MUST always be positioned in the top right of a collection.",
      "type": "Ordering",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"positioning",

              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "parents",
                  "selector": ".modal-dialog"
                }
              ],
              "positioning":[
                {
                  "type": "isContained"
                },
                {
                  "type": "collideHorizontal",
                  "stretchHorizontalB": 0.8,
                  "not": true
                },
                {
                  "type": "collideVertical",
                  "stretchVerticalB": 0.2
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The functionality of the close button MUST be indicated for screen readers by an aria-label.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"ariaLabeled",
              "selectors": [{"type": "self"}
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
}


,
{
  "title": "Primary Button",
  "selector": ".btn-primary",
  "rules": [
    {
      "description": "There MUST only be one Primary Button per page in ILIAS.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": ".btn-primary"
                }
              ],
              "operator":"<=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Trigger Element",
  "selector": "btn, a:not(.ilAccAnchor)",
  "rules":[
    {
      "description": "The interaction triggered by the Trigger Element MUST be fired if the ‘Return’-Key is clicked while the element is focused.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "ignore": [[
            {
              "type": "parent",
              "selector": ".ilHeader"
            }
          ]],
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"focusable",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "All Trigger Elements visible in a view MUST be accessible by keyboard by using the ‘Tab’-Key.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "ignore": [[
            {
              "type": "parent",
              "selector": ".ilHeader"
            }
          ]],
          "variants": [
            {
              "type":"accessibility",
              "subtype":"tabbable",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "All active Triggers MUST indicate hovering by displaying the cursor as pointer (hand).",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "ignore": [[
            {
              "type": "parent",
              "selector": "li.active, .ilHeader"
            }
          ]],
          "variants": [
            {
              "type":"css",
              "subtype":"properties",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "properties":[
                {
                  "simulate":{
                    "type": "hover",
                    "point": "before"
                  },
                  "whichA": "cursor",
                  "value":"pointer",
                  "type": "isEqual"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
    "description": "All Trigger Elements MUST slightly modify font color, underline or background color on-hovering.",
      "type": "Style",
      "level": "MUST",
    "tests":[
      {
        "not": "",
        "ignore": [[
          {
            "type": "parent",
            "selector": "li.active, .ilHeader"
          }
        ]],
        "variants":
        [
          {
            "type":"css",
            "subtype":"coloring",
            "selectorsA": [{"type": "self"}],
            "selectorsB": [{"type": "self"}],
            "coloring":[
              {
                "simulate":{
                  "type": "hover",
                  "point": "between"
                },
                "whichA": "color",
                "whichB":"color",
                "type": "isEqual",
                "not": true
              }
            ],
            "not":""
          },
          {
            "type":"css",
            "subtype":"coloring",
            "selectorsA": [{"type": "self"}],
            "selectorsB": [{"type": "self"}],
            "coloring":[
              {
                "simulate":{
                  "type": "hover",
                  "point": "between"
                },
                "whichA": "background-color",
                "whichB":"background-color",
                "type": "isEqual",
                "not": true
              }
            ],
            "not":""
          },
          {
            "type":"css",
            "subtype":"properties",
            "selectorsA": [
              {
                "type": "self"
              }
            ],
            "properties":[
              {
                "simulate":{
                  "type": "hover",
                  "point": "before"
                },
                "whichA": "text-decoration",
                "value": "underline",
                "type": "isEqual"
              }
            ],
            "not":""
          }
        ]
      }
    ]
    }

  ]
},{
  "title": "Input Element",
  "selector": "input, select, textarea",
  "rules": [
    {
      "description": "All Input Elements visible in a view MUST be accessible by keyboard by using the ‘Tab’-Key.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"tabbable",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If focused, the Input Elements MUST change their Input Border Color to the Input Focus Border Color.",
      "type": "Style",
      "level": "MUST",

      "tests": [
        {
          "selector": "ignore",
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"properties",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "self"
                }
              ],
              "properties":[
                {
                  "simulate":{
                    "type": "focus",
                    "point": "between"
                  },
                  "whichA": "outline",
                  "whichB":"outline",
                  "type": "isEqual",
                  "not": true
                }
              ],
              "not":""
            },
            {
              "type":"css",
              "subtype":"properties",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "self"
                }
              ],
              "properties":[
                {
                  "simulate":{
                    "type": "focus",
                    "point": "between"
                  },
                  "whichA": "border-color",
                  "whichB":"border-color",
                  "type": "isEqual",
                  "not": true
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
}





,{
  "title": "Checkbox",
  "selector": ".checkbox",
  "rules": [
    {
      "description": "A checkbox SHOULD be used whenever a user has to perform a binary choice. You MUST NOT use a Select input or a radio group in this case.",
      "type": "Usage",
      "level": "SHOULD",
      "tests": [
        {
          "selector":".radio",
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "siblings",
                  "selector": ".radio"
                }
              ],
              "operator":"<",
              "amount":"2",
              "not":true
            }
          ]
        },
        {
          "selector":"select",
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "option"
                }
              ],
              "operator":"<=",
              "amount":"2",
              "not":true
            }
          ]
        }
      ]
    },
    {
      "description": "The checkbox’s identifier MUST always state something positive.",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[
                {
                  "type": "parents",
                  "selector": ".form-group"
                },
                {
                  "type": "children",
                  "selector": "label:first"
                }
              ],
              "contentType": "content",
              "operator":"=",
              "amount":"0",
              "regex":
              {
                "term":".*(\\s|^)not(\\s|$).*",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If a description is needed, it MUST be placed below the checkbox in the usual place for descriptions of form settings.",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[
                {
                  "type": "children",
                  "selector": "label"
                }
              ],
              "contentType": "content",
              "operator":"=",
              "amount":"0",
              "regex":"",
              "not":""
            }
          ]
        }
      ]
    }
  ]
}





,{
  "title": "Checkbox Group",
  "selector": "input[type=checkbox]",
  "rules": [
    {
      "description": "Use if only few items are expected to be selected (<=5), the total number of items to select from SHOULD not be larger than 25. Use a Tag Input otherwise.",
      "type": "Usage",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "parents",
                  "selector": ".form-group"
                },
                {
                  "type": "selector",
                  "selector": ":not(.ilSubForm) input[type=checkbox]"
                }
              ],
              "operator":"<=",
              "amount":"25",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Other than for the checkbox input, each checkbox MUST be labeled.",
      "type": "Wording",
      "level": "Must",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "parents",
                  "selector": ".form-group"
                },
                {
                  "type": "selector",
                  "selector": "input[type=checkbox]"
                }
              ],
              "operator":"<=",
              "amount":"1",
              "not":""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[
                {
                  "type": "next"
                },
                {
                  "type": "selector",
                  "selector": "label"
                }
              ],
              "contentType": "content",
              "operator":"=",
              "amount":"0",
              "regex":"",
              "not":true
            }
          ]
        }
      ]
    }

  ]
}





,{
  "title": "Radio Group",
  "selector": ".radio",
  "rules": [
    {
      "description": "A radio group SHOULD contain 3 to 5 options.",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "siblings",
                  "selector": ".radio"
                }
              ],
              "operator":">=",
              "amount":"2",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If more than 5 options are available a Select Input SHOULD be used. ",
      "type": "Usage",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "siblings",
                  "selector": ".radio"
                }
              ],
              "operator":"<=",
              "amount":"4",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Each option in a radio group MUST be labeled.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[
                {
                  "type": "children",
                  "selector": "label"
                }
              ],
              "contentType": "content",
              "operator":"=",
              "amount":"0",
              "regex":"",
              "not":true
            }
          ]
        }
      ]
    },
    {
      "description": "This label SHOULD not consist of more than 5 words. ",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors":[
                {
                  "type": "children",
                  "selector": "label"
                }
              ],
              "contentType": "content",
              "operator":"<=",
              "amount":"5",
              "regex":"",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If used in forms, the label of the options SHOULD not simply repeat the identifier on the left. A meaningful labeling should be chosen instead.",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"compare",
              "selectorsA":[
                {
                  "type": "parents",
                  "selector": ".form-group"
                },
                {
                  "type": "children",
                  "selector": "label:first"
                }
              ],
              "selectorsB":[
                {
                  "type": "children",
                  "selector": "label"
                }
              ],
              "not":true
            }
          ]
        }
      ]
    }
  ]
}





,{
  "title": "Select Input",
  "selector": "select",
  "rules": [
    {
      "description": " Select Inputs MUST NOT be used for binary choices.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "option"
                }
              ],
              "operator":"<=",
              "amount":"2",
              "not":true
            }
          ]
        }
      ]
    },
    {
      "description": "Select Inputs SHOULD allow user selecting 1 out of N elements where N > 5 and no autocomplete selection is available.",
      "type": "Usage",
      "level": "Should",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "option"
                }
              ],
              "operator":">",
              "amount":"5",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "  If the number of selectable items is greater than 20 a Tag Input with autocomplete SHOULD be used instead.",
      "type": "Usage",
      "level": "Should",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "option"
                }
              ],
              "operator":"<=",
              "amount":"20",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": " Select Inputs MUST NOT for selecting multiple values. Use Tag Input with autocomplete instead.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "self",
                  "selector": "[multiple]"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    }

  ]
}





,{
  "title": "Form Settings",
  "selector": "form .form-horizontal .form-group",
  "rules": [
    {
      "description": "A setting MUST be contained by a Titled Form Section.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "prevAll",
                  "selector": ".ilFormHeader"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "parents",
                  "selector": ".form-group"
                },
                {
                  "type": "prevAll",
                  "selector": ".ilFormHeader"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "A setting MUST use an identifier and an input element.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "label:nth-of-type(1)"
                }
              ],
              "operator":"=",
              "amount":"1",
              "not":""
            }
          ]
        },
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": "input, select, .checkbox, textarea"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "A by-line MUST be placed directly underneath the option it describes.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                },
                {
                  "type": "prev",
                  "selector": "input, select, .checkbox, textarea,label"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": " An identifier MUST be composed of one single term or a very short phrase of no more than 5 words. The identifier is an eye catcher for users skimming the form.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "label:nth-of-type(1)"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        },{
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "label:nth-of-type(1)"
                }
              ],
              "operator":"<=",
              "amount":"5",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "An identifier MUST make a positive statement. If the purpose of the setting is inherently negative, use Verbs as 'Limit..', 'Lock..'.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "label:nth-of-type(1)"
                }
              ],
              "operator":"=",
              "regex":
              {
                "term":".*(\\s|^)not(\\s|$).*",
                "modifier": "gi"
              },
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "If by-lines are provided they MUST be informative, not merely repeating the identifier’s or input element’s content. If no informative description can be devised, no description is needed. ",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"compare",
              "selectorsA": [
                {
                  "type": "children",
                  "selector": "label:nth-of-type(1)"
                }
              ],
              "selectorsB": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "not":true
            }
          ]
        }
      ]
    },
    {
      "description": "By-lines SHOULD be short with no more than 25 words.",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"<=",
              "amount":"25",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "A by-line SHOULD NOT address the user directly. Addressing users directly is reserved for cases of high risk of severe mis-configuration.",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "regex":
              {
                "term":".*(\\s|^)(you|your)(\\s|$).*",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "A by-line MUST be grammatically complete sentence with a period (.) at the end.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"1",
              "regex":
              {
                "term":".*(\\.$)",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "By-lines SHOULD NOT use any formatting in descriptions (bold, italic or similar).",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "regex":
              {
                "term":".*(\\s|^)<.*>.*<.*>(\\s|$).*",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "By-lines MUST NOT feature parentheses since they greatly diminish readability.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "regex":
              {
                "term":"(.*)\\(|\\)(.*)",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "By-lines SHOULD NOT start with terms such as: If this option is set … If this setting is active … Choose this setting if … This setting … Rather state what happens directly: Participants get / make / can … Point in time after which…. ILIAS will monitor… Sub-items xy are automatically whatever…",
      "type": "Wording",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".help-block"
                }
              ],
              "operator":"=",
              "amount":"0",
              "regex":
              {
                "term":"(^If .*)|(^Choose this setting .*)|(^This setting  .*)",
                "modifier": "gi"
              },
              "not":""
            }
          ]
        }
      ]
    }
  ]
}

,{
  "title": "Form Subsettings",
  "selector": "form .form-horizontal .form-group .ilSubForm",
  "rules": [
    {
      "description": "There MUST NOT be a nesting of more than one subsetting (see Jour Fixe comment in feature wiki reference). The only exception to this rule is the required quantification of a subsetting by a date or number. These exceptions MUST individually accepted by the Jour Fixe.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilSubForm .ilSubForm"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Subsettings MUST bear an identifier.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "selector": "form .form-horizontal .form-group .ilSubForm .form-group",
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "label"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Subsetting MUST NOT be enabled by any other form element than a checkbox or a radio input group.",
      "type": "Interaction",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "siblings",
                  "selector": "checkbox, .radio, .checkbox"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    }
  ]
}

,{
  "title": "Standard Form",
  "selector": "form .form-horizontal",
  "rules": [
    {
      "description": "Forms MUST NOT be used on the same content screen as tables.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": "table.table"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Forms MUST NOT be used on the same content screen as toolbars.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": ".ilToolbar"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Each form MUST contain at least one titled form section.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilFormHeader, .ilHeader"
                }
              ],
              "operator":">=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "In the 'Settings' tab of a module a Titled Form has specific rules: The title of the first Titled Form Section MUST always be 'Edit [NameOfModule]'. ",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#tab_settings.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#ilSubTab li:first.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilFormHeader:first"

                }
              ],
              "regex":{
                "term": "^Edit\\s[a-z].*",
                "modifier":"i"
              },
              "operator":"=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "In the 'Settings' tab of a module a Titled Form has specific rules: It’s first Form Settings MUST be 'Title'",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#tab_settings.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#ilSubTab li:first.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".form-group:first label:first"

                }
              ],
              "regex":{
                "term": "^Title",
                "modifier":"i"
              },
              "operator":"=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "In the 'Settings' tab of a module a Titled Form has specific rules: It’s second Form Settings MUST be 'Description'.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#tab_settings.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "selector",
                  "selector": "#ilSubTab li:first.active"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".form-group:nth-of-type(3):first label:first"

                }
              ],
              "regex":{
                "term": "^Description",
                "modifier":"i"
              },
              "operator":"=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The first and last titled form section of a form MUST contain a 'Save' and 'Cancel' button for the form. 'Save' is left and “Cancel” is right. In some rare exceptions the Buttons MAY be named differently: if 'Save' or 'Cancel' are clearly a misleading since the action is more than storing the data into the database. 'Send Mail' would be an example of this.",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilFormHeader:first .ilFormCmds"
                },
                {
                  "type": "children",
                  "selector": "input.btn"
                }
              ],
              "items":[
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "contentType": "attribute",
                    "regex": "Save",
                    "contentSelector": "value",
                    "amount": 1
                  }
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "contentType": "attribute",
                    "regex": "Cancel",
                    "contentSelector": "value",
                    "amount": 1
                  }
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }

  ]
},{
  "title": "Titled Form Section",
  "selector": "form .form-horizontal .ilFormHeader",
  "rules": [
    {
      "description": "Proper Titled Form Sections SHOULD comprise 2 to 5 Settings. ",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "nextUntil",
                  "selector": ".ilFormHeader,.ilFormFooter"
                }
              ],
              "operator":">=",
              "amount":"2",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "More than 5 Settings SHOULD be split into two areas unless this would tamper with the 'familiar' information architecture of forms.",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "nextUntil",
                  "selector": ".ilFormHeader,.ilFormFooter"
                }
              ],
              "operator":"<=",
              "amount":"5",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "A Titled Form Section MUST contain a title.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilHeader"
                }
              ],
              "operator":"=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The title SHOULD contain less than 30 characters.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"wording",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilHeader"
                }
              ],
              "operator":"<=",
              "amount":"30",
              "regex":{
                "term": ".",
                "modifier": "g"
              },
              "not":""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Input Collection",
  "selector": "input, select, textarea",
  "rules":[
    {
      "description": "Every Input Element in every Input Collection MUST be accessible by keyboard.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"tabbable",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }

  ]
},{
  "title": "Navigational Collection",
  "selector": "#ilTab, #ilSubTab",
  "rules":[
    {
      "description": "Navigational Collections SHOULD only contain links as interaction triggers.",
      "type": "Composition",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".btn:not(.dropdown-toggle)"
                }
              ],
              "operator": "=",
              "amount": "0",
              "not": ""
            }
          ]
        }
      ]
    }

  ]
},{
  "title": "Content Subtabs",
  "selector": "#ilSubTab",
  "rules":[
    {
      "description": "Ordering (for Subtabs of first tab): i. View (Zeigen) tab: Displays content of First Tab. ii. Manage; Verwalten tab: To cary out actions to be performed on multiple items at once iii. Sorting: To sort items iv. Customize Page: If the page editor is activated in the administration, then page content can be added and placed above and below content lists.",
      "type": "Ordering",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "root"
                },
                {
                  "type": "selector",
                  "selector": ".ilMainMenu li.dropdown:nth-of-type(2) span.ilAccHidden"
                }
              ],
              "operator": "=",
              "amount": "0",
              "not": ""
            },
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "root"
                },
                {
                  "type": "selector",
                  "selector": "#ilTab li:first.active"
                }
              ],
              "operator": "=",
              "amount": "0",
              "not": ""
            },
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors": [
                {
                  "type": "children",
                  "selector": "li"
                },
                {
                  "type": "children",
                  "selector": "a"
                }
              ],
              "items":[
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^View$",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Manage$",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Sorting$",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Customize Page$",
                    "amount": 1
                  },
                  "optional": true
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Content Subtabs MUST NOT have further subtabs (3rd Level of subtabs).",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "root"},
                {
                  "type":"selector",
                  "selector":".ilSubTab"
                }
              ],
              "operator": "<=",
              "amount": "1",
              "not": ""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Content Tabs",
  "selector": "#ilTab",
  "rules":[
    {
      "description": "If there are more tabs that can be displayed by the available length, the Tabs not fitting on the right MUST be moved into a Dropdown Menu labeled with “...” and a Glyph Down.",
      "type": "Responsiveness",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "#ilLastTab"
                }
              ],
              "operator": "=",
              "amount": "1",
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "Tabs MUST be in the following order: Content-related tabs, if content is not a 'separate view', Info tab,  Settings tab ,  Member or similar user lists, Learning Progress tab,   All other tabs (not in this list),  Metadata tab,  Export tab, Permissions tab.",
      "type": "Ordering",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "root"
                },
                {
                  "type": "selector",
                  "selector": ".ilMainMenu li.dropdown:nth-of-type(2) span.ilAccHidden"
                }
              ],
              "operator": "=",
              "amount": "0",
              "not": ""
            },
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors": [
                {
                  "type": "children",
                  "selector": "li:not(#ilLastTab)"
                },
                {
                  "type": "children",
                  "selector": "a"
                }
              ],
              "items":[
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Content(\\s.*|$)",
                    "amount": 1
                  }
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Info",
                    "amount": 1
                  }
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Settings",
                    "amount": 1
                  }
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Members",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Learning Progress",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^(?!Metadata|Export|Permissions)(.*)$",
                    "amount": 1
                  },
                  "optional": true,
                  "repetitions": -1
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Metadata",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Export",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "Permissions",
                    "amount": 1
                  }
                },
                {
                  "variant": {
                    "type": "structure",
                    "subtype": "amount",
                    "selectors":[{
                      "type":"selector",
                      "selector":".glyphicon-chevron-right"
                    }
                    ],
                    "amount": 1
                  },
                  "optional": true
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Tabs to change the Mode of the Object presented (e.g. to “Preview”) MUST be placed on the very right and be followed by a Next-Glyph.",
      "type": "Ordering",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type":"selector",
                  "selector":".glyphicon-chevron-right"
                }
              ],
              "operator": "=",
              "amount": "0",
              "not": ""
            },
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors": [
                {
                  "type": "children",
                  "selector": "li:not(#ilLastTab)"
                },
                {
                  "type": "children",
                  "selector": "a"
                }
              ],
              "items":[
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^(.*)$",
                    "amount": 1
                  },
                  "optional": true,
                  "repetitions": -1
                },
                {
                  "variant": {
                    "type": "structure",
                    "subtype": "amount",
                    "selectors":[{
                      "type":"selector",
                      "selector":".glyphicon-chevron-right"
                    }
                    ],
                    "amount": 1
                  }
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Tabs",
  "selector": "#ilTab, #ilSubTab",
  "rules":[
    {
      "description": "There MUST NOT be more than 10 Tabs.",
      "type": "Composition",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "structure",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "children",
                  "selector": "li:not(#ilLastTab)"
                }
              ],
              "operator": "<=",
              "amount": "10",
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "Tabs MUST NOT contain more than 2 words.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li:not(#ilLastTab) a, #ilSubTab li a",
          "not": "",
          "variants": [
            {
              "type": "wording",
              "subtype": "amount",
              "operator": "<=",
              "amount": "2",
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "Every word except articles, coordinating conjunctions and prepositions of four or fewer letters MUST be capitalized.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li:not(#ilLastTab), #ilSubTab li",
          "not": "",
          "variants": [
            {
              "type": "wording",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "contentType": "content",
              "operator": "=",
              "amount": "0",
              "regex": "( |\\(|^)[a-z][a-zA-Z0-9]*",
              "ignore": {
                "list": [
                  "&nbsp;"
                ],
                "ignoreConjunctions": true,
                "ignorePrepositions": true,
                "ignoreArticles": true
              },
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "Nouns rather than verbs SHOULD be used to label Tabs, for example Content or Settings.",
      "type": "Wording",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li:not(#ilLastTab), #ilSubTab li",
          "not": "",
          "variants": [
            {
              "type": "wording",
              "subtype": "amount",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "contentType": "content",
              "operator": "=",
              "amount": "0",
              "regex":
              {
                "term":".*(\\s|^)(show|edit|do|manage|sort|configure|customize|manage)(\\s|$).*",
                "modifier": "gi"
              },
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "The Tab currently opened/active MUST visually differ from the others.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li.active, #ilSubTab li.active",
          "not": "",
          "variants": [
            {
              "type":"css",
              "subtype":"properties",
              "selectorsA": [
                {
                  "type": "children",
                  "selector": "a"
                }
              ],
              "selectorsB": [
                {
                  "type": "siblings",
                  "selector": "li"
                },                {
                  "type": "children",
                  "selector": "a:not(.active)"
                }
              ],
              "properties":[
                {
                  "whichA": "background",
                  "whichB": "background",
                  "type": "isEqual"
                },
                {
                  "whichA": "color",
                  "whichB": "color",
                  "type": "isEqual"
                },
                {
                  "whichA": "border",
                  "whichB": "border",
                  "type": "isEqual"
                },
                {
                  "whichA": "text-decoration",
                  "whichB": "text-decoration",
                  "type": "isEqual"
                }
              ],
              "not":true
            }
          ]
        }
      ]
    },
    {
      "description": "The complete list of tabs MUST cary the role 'tablist'",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"role",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "role": "tablist",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "The individual Tabs MUST cary the role 'tab'",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li:not(#ilLastTab), #ilSubTab li",
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"role",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "role": "tab",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "All Tabs MUST be accessible by keyboard.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "selector": "#ilTab li:not(#ilLastTab) a, #ilSubTab li a",
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"tabbable",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
},{
  "title": "Toolbar",
  "selector": ".ilToolbar",
  "rules": [
    {
      "description": "There MUST NOT be more than one Toolbar for per screen.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": ".ilToolbar .navbar-brand img"
                }
              ],
              "operator":">",
              "amount":"0",
              "not":""
            },
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": ".ilToolbar"
                }
              ],
              "operator":"<=",
              "amount":"1",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Toolbars MUST NOT be used in the same view as forms.",
      "type": "Usage",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "root"
                },{
                  "type": "find",
                  "selector": "form .form-horizontal"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Toolbars MUST carry the aria-label ‘Content Area Toolbar’.",
      "type": "Accessibility",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"accessibility",
              "subtype":"label",
              "selectors": [
                {
                  "type": "self"
                }
              ],
              "label":"Content Area Toolbar",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Labels in front of input fields MUST NOT be presented above the input on mobile screens.",
      "type": "Responsiveness",
      "level": "MUST",
      "tests": [
        {
          "selector": ".navbar-form",
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "prev",
                  "selector": ".navbar-text"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            },
            {
              "type":"css",
              "subtype":"positioning",

              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "selectorsB": [
                {
                  "type": "prev",
                  "selector": ".navbar-text"
                }
              ],
              "positioning":[
                {
                  "type": "isBellow",
                  "not": true
                }
              ],
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Toolbars MUST form a whole Gestalt by being enclosed in a light-grey rectangle.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type": "css",
              "subtype": "coloring",
              "selectorsA": [
                {
                  "type": "self"
                }
              ],
              "coloring": [
                {
                  "whichA": "background-color",
                  "type": "isGrey"
                }
              ],
              "not": ""
            }
          ]
        }
      ]
    },
    {
      "description": "Two Seperators MUST not enclose empty content.",
      "type": "Style",
      "level": "MUST",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"amount",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".ilToolbarSeparator"
                },{
                  "type": "next",
                  "selector": ".ilToolbarSeparator"
                }
              ],
              "operator":"=",
              "amount":"0",
              "not":""
            }
          ]
        }
      ]
    },
    {
      "description": "Entries SHOULD be ordered according the proposed default ordering, if there are no good reasons (such importance for the workflow or frequent use of a certain action) not to. The following default ordering is recommended:  Start Object, Create super Item,     Delete super item, Create sub item,  Delete sub item, Assign, Remove, Select for Presentation, Browse Item, Shortcut, Import, Export, Download, Manipulate all at once (order might change depending of the nature of the action to be performed).",
      "type": "Ordering",
      "level": "SHOULD",
      "tests": [
        {
          "not": "",
          "variants": [
            {
              "type":"structure",
              "subtype":"ordering",
              "selectors": [
                {
                  "type": "selector",
                  "selector": ".navbar-form .btn:not([type='submit'])"
                }
              ],
              "items":[
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Start(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Add|Create(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Delete(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Add|Create(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Delete(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Assign(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Remove(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^(.*)$",
                    "amount": -1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Import(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Export(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                },
                {
                  "variant": {
                    "type": "wording",
                    "subtype": "amount",
                    "regex": "^Download(.*|$)",
                    "amount": 1
                  },
                  "optional": true
                }
              ],
              "not":""
            }
          ]
        }
      ]
    }
  ]
}]}